As Ethereum uses EVM(Ethereum Virtual Machine) as a core component of the network, smart contract code written in high-level languages needs to be compiled into EVM bytecode to be run. EMV Bytecode is an executable code on EVM and Contract ABI is an interface to interact with EVM bytecode. For example, if you want to call a function in a smart contract with your JavaScript code, ABI plays a role as an intermediary between your JavaScript code and EVM bytecode to interact with each other. 


* Application Binary Interface (ABI): a communication layer between solidity and Javascript, in JSON format
* Bytecode: the low level machine language that gets executed by the the EVM

simple_storage = SimpleStorage[-1] # [-1] go get the index thats one less then the length / get us the most recent deployment

****************************Contract deployment****************************
Contract deployment is a special Ethereum transaction sent to the address 0.
The deployment has the side effects of creating bytecode at a specific address (i.e, it creates a smart contract account).
Contracts are deployed at predictable addresses based on the address and nonce of the account creating the contract.